#pragma once
#include "MathCoreDef.h"
#include "MatrixDef.h"


namespace Shh
{
	
	inline Matrix4 Matrix4::operator + ( const Matrix4 &mat4 ) const
	{
		Matrix4 r;
		r.m44[0][0] = m44[0][0] + mat4.m44[0][0];
		r.m44[0][1] = m44[0][1] + mat4.m44[0][1];
		r.m44[0][2] = m44[0][2] + mat4.m44[0][2];
		r.m44[0][3] = m44[0][3] + mat4.m44[0][3];

		r.m44[1][0] = m44[1][0] + mat4.m44[1][0];
		r.m44[1][1] = m44[1][1] + mat4.m44[1][1];
		r.m44[1][2] = m44[1][2] + mat4.m44[1][2];
		r.m44[1][3] = m44[1][3] + mat4.m44[1][3];

		r.m44[2][0] = m44[2][0] + mat4.m44[2][0];
		r.m44[2][1] = m44[2][1] + mat4.m44[2][1];
		r.m44[2][2] = m44[2][2] + mat4.m44[2][2];
		r.m44[2][3] = m44[2][3] + mat4.m44[2][3];

		r.m44[3][0] = m44[3][0] + mat4.m44[3][0];
		r.m44[3][1] = m44[3][1] + mat4.m44[3][1];
		r.m44[3][2] = m44[3][2] + mat4.m44[3][2];
		r.m44[3][3] = m44[3][3] + mat4.m44[3][3];

		return r;
	}	
	inline Matrix4 Matrix4::operator - ( const Matrix4 &mat4 ) const
	{
		Matrix4 r;
		r.m44[0][0] = m44[0][0] - mat4.m44[0][0];
		r.m44[0][1] = m44[0][1] - mat4.m44[0][1];
		r.m44[0][2] = m44[0][2] - mat4.m44[0][2];
		r.m44[0][3] = m44[0][3] - mat4.m44[0][3];

		r.m44[1][0] = m44[1][0] - mat4.m44[1][0];
		r.m44[1][1] = m44[1][1] - mat4.m44[1][1];
		r.m44[1][2] = m44[1][2] - mat4.m44[1][2];
		r.m44[1][3] = m44[1][3] - mat4.m44[1][3];

		r.m44[2][0] = m44[2][0] - mat4.m44[2][0];
		r.m44[2][1] = m44[2][1] - mat4.m44[2][1];
		r.m44[2][2] = m44[2][2] - mat4.m44[2][2];
		r.m44[2][3] = m44[2][3] - mat4.m44[2][3];

		r.m44[3][0] = m44[3][0] - mat4.m44[3][0];
		r.m44[3][1] = m44[3][1] - mat4.m44[3][1];
		r.m44[3][2] = m44[3][2] - mat4.m44[3][2];
		r.m44[3][3] = m44[3][3] - mat4.m44[3][3];

		return r;
	}

	inline Matrix4 Matrix4::operator * (const Matrix4 &mat4) const
	{
		Matrix4 r;
		r.m44[0][0] = m44[0][0] * mat4.m44[0][0] + m44[0][1] * mat4.m44[1][0] + m44[0][2] * mat4.m44[2][0] + m44[0][3] * mat4.m44[3][0];
		r.m44[0][1] = m44[0][0] * mat4.m44[0][1] + m44[0][1] * mat4.m44[1][1] + m44[0][2] * mat4.m44[2][1] + m44[0][3] * mat4.m44[3][1];
		r.m44[0][2] = m44[0][0] * mat4.m44[0][2] + m44[0][1] * mat4.m44[1][2] + m44[0][2] * mat4.m44[2][2] + m44[0][3] * mat4.m44[3][2];
		r.m44[0][3] = m44[0][0] * mat4.m44[0][3] + m44[0][1] * mat4.m44[1][3] + m44[0][2] * mat4.m44[2][3] + m44[0][3] * mat4.m44[3][3];

		r.m44[1][0] = m44[1][0] * mat4.m44[0][0] + m44[1][1] * mat4.m44[1][0] + m44[1][2] * mat4.m44[2][0] + m44[1][3] * mat4.m44[3][0];
		r.m44[1][1] = m44[1][0] * mat4.m44[0][1] + m44[1][1] * mat4.m44[1][1] + m44[1][2] * mat4.m44[2][1] + m44[1][3] * mat4.m44[3][1];
		r.m44[1][2] = m44[1][0] * mat4.m44[0][2] + m44[1][1] * mat4.m44[1][2] + m44[1][2] * mat4.m44[2][2] + m44[1][3] * mat4.m44[3][2];
		r.m44[1][3] = m44[1][0] * mat4.m44[0][3] + m44[1][1] * mat4.m44[1][3] + m44[1][2] * mat4.m44[2][3] + m44[1][3] * mat4.m44[3][3];

		r.m44[2][0] = m44[2][0] * mat4.m44[0][0] + m44[2][1] * mat4.m44[1][0] + m44[2][2] * mat4.m44[2][0] + m44[2][3] * mat4.m44[3][0];
		r.m44[2][1] = m44[2][0] * mat4.m44[0][1] + m44[2][1] * mat4.m44[1][1] + m44[2][2] * mat4.m44[2][1] + m44[2][3] * mat4.m44[3][1];
		r.m44[2][2] = m44[2][0] * mat4.m44[0][2] + m44[2][1] * mat4.m44[1][2] + m44[2][2] * mat4.m44[2][2] + m44[2][3] * mat4.m44[3][2];
		r.m44[2][3] = m44[2][0] * mat4.m44[0][3] + m44[2][1] * mat4.m44[1][3] + m44[2][2] * mat4.m44[2][3] + m44[2][3] * mat4.m44[3][3];

		r.m44[3][0] = m44[3][0] * mat4.m44[0][0] + m44[3][1] * mat4.m44[1][0] + m44[3][2] * mat4.m44[2][0] + m44[3][3] * mat4.m44[3][0];
		r.m44[3][1] = m44[3][0] * mat4.m44[0][1] + m44[3][1] * mat4.m44[1][1] + m44[3][2] * mat4.m44[2][1] + m44[3][3] * mat4.m44[3][1];
		r.m44[3][2] = m44[3][0] * mat4.m44[0][2] + m44[3][1] * mat4.m44[1][2] + m44[3][2] * mat4.m44[2][2] + m44[3][3] * mat4.m44[3][2];
		r.m44[3][3] = m44[3][0] * mat4.m44[0][3] + m44[3][1] * mat4.m44[1][3] + m44[3][2] * mat4.m44[2][3] + m44[3][3] * mat4.m44[3][3];

		return r;
	}

	inline Matrix4 Matrix4::operator * (const Matrix3& mat3) const
	{
		Matrix4 r;
		r.m44[0][0] = m44[0][0] * mat3[0][0] + m44[0][1] * mat3[1][0] + m44[0][2] * mat3[2][0];
		r.m44[0][1] = m44[0][0] * mat3[0][1] + m44[0][1] * mat3[1][1] + m44[0][2] * mat3[2][1];
		r.m44[0][2] = m44[0][0] * mat3[0][2] + m44[0][1] * mat3[1][2] + m44[0][2] * mat3[2][2];
		r.m44[0][3] = m44[0][3];

		r.m44[1][0] = m44[1][0] * mat3[0][0] + m44[1][1] * mat3[1][0] + m44[1][2] * mat3[2][0];
		r.m44[1][1] = m44[1][0] * mat3[0][1] + m44[1][1] * mat3[1][1] + m44[1][2] * mat3[2][1];
		r.m44[1][2] = m44[1][0] * mat3[0][2] + m44[1][1] * mat3[1][2] + m44[1][2] * mat3[2][2];
		r.m44[1][3] = m44[1][3];

		r.m44[2][0] = m44[2][0] * mat3[0][0] + m44[2][1] * mat3[1][0] + m44[2][2] * mat3[2][0];
		r.m44[2][1] = m44[2][0] * mat3[0][1] + m44[2][1] * mat3[1][1] + m44[2][2] * mat3[2][1];
		r.m44[2][2] = m44[2][0] * mat3[0][2] + m44[2][1] * mat3[1][2] + m44[2][2] * mat3[2][2];
		r.m44[2][3] = m44[2][3];

		r.m44[3][0] = m44[3][0] * mat3[0][0] + m44[3][1] * mat3[1][0] + m44[3][2] * mat3[2][0];
		r.m44[3][1] = m44[3][0] * mat3[0][1] + m44[3][1] * mat3[1][1] + m44[3][2] * mat3[2][1];
		r.m44[3][2] = m44[3][0] * mat3[0][2] + m44[3][1] * mat3[1][2] + m44[3][2] * mat3[2][2];
		r.m44[3][3] = m44[3][3];

		return r;
	}

	inline Matrix4 Matrix4::operator * (const Matrix43& mat43) const
	{
		Matrix4 r;
		r.m44[0][0] = m44[0][0] * mat43[0][0] + m44[0][1] * mat43[1][0] + m44[0][2] * mat43[2][0] + m44[0][3] * mat43[3][0];
		r.m44[0][1] = m44[0][0] * mat43[0][1] + m44[0][1] * mat43[1][1] + m44[0][2] * mat43[2][1] + m44[0][3] * mat43[3][1];
		r.m44[0][2] = m44[0][0] * mat43[0][2] + m44[0][1] * mat43[1][2] + m44[0][2] * mat43[2][2] + m44[0][3] * mat43[3][2];
		r.m44[0][3] = m44[0][3];

		r.m44[1][0] = m44[1][0] * mat43[0][0] + m44[1][1] * mat43[1][0] + m44[1][2] * mat43[2][0] + m44[1][3] * mat43[3][0];
		r.m44[1][1] = m44[1][0] * mat43[0][1] + m44[1][1] * mat43[1][1] + m44[1][2] * mat43[2][1] + m44[1][3] * mat43[3][1];
		r.m44[1][2] = m44[1][0] * mat43[0][2] + m44[1][1] * mat43[1][2] + m44[1][2] * mat43[2][2] + m44[1][3] * mat43[3][2];
		r.m44[1][3] = m44[1][3];

		r.m44[2][0] = m44[2][0] * mat43[0][0] + m44[2][1] * mat43[1][0] + m44[2][2] * mat43[2][0] + m44[2][3] * mat43[3][0];
		r.m44[2][1] = m44[2][0] * mat43[0][1] + m44[2][1] * mat43[1][1] + m44[2][2] * mat43[2][1] + m44[2][3] * mat43[3][1];
		r.m44[2][2] = m44[2][0] * mat43[0][2] + m44[2][1] * mat43[1][2] + m44[2][2] * mat43[2][2] + m44[2][3] * mat43[3][2];
		r.m44[2][3] = m44[2][3];

		r.m44[3][0] = m44[3][0] * mat43[0][0] + m44[3][1] * mat43[1][0] + m44[3][2] * mat43[2][0] + m44[3][3] * mat43[3][0];
		r.m44[3][1] = m44[3][0] * mat43[0][1] + m44[3][1] * mat43[1][1] + m44[3][2] * mat43[2][1] + m44[3][3] * mat43[3][1];
		r.m44[3][2] = m44[3][0] * mat43[0][2] + m44[3][1] * mat43[1][2] + m44[3][2] * mat43[2][2] + m44[3][3] * mat43[3][2];
		r.m44[3][3] = m44[3][3];

		return r;
	}

	inline Matrix4 Matrix4::operator * (const Matrix34 &mat34) const
	{
		Matrix4 r;
		r.m44[0][0] = m44[0][0] * mat34[0][0] + m44[0][1] * mat34[1][0] + m44[0][2] * mat34[2][0];
		r.m44[0][1] = m44[0][0] * mat34[0][1] + m44[0][1] * mat34[1][1] + m44[0][2] * mat34[2][1];
		r.m44[0][2] = m44[0][0] * mat34[0][2] + m44[0][1] * mat34[1][2] + m44[0][2] * mat34[2][2];
		r.m44[0][3] = m44[0][0] * mat34[0][3] + m44[0][1] * mat34[1][3] + m44[0][2] * mat34[2][3] + m44[0][3];

		r.m44[1][0] = m44[1][0] * mat34[0][0] + m44[1][1] * mat34[1][0] + m44[1][2] * mat34[2][0];
		r.m44[1][1] = m44[1][0] * mat34[0][1] + m44[1][1] * mat34[1][1] + m44[1][2] * mat34[2][1];
		r.m44[1][2] = m44[1][0] * mat34[0][2] + m44[1][1] * mat34[1][2] + m44[1][2] * mat34[2][2];
		r.m44[1][3] = m44[1][0] * mat34[0][3] + m44[1][1] * mat34[1][3] + m44[1][2] * mat34[2][3] + m44[1][3];

		r.m44[2][0] = m44[2][0] * mat34[0][0] + m44[2][1] * mat34[1][0] + m44[2][2] * mat34[2][0];
		r.m44[2][1] = m44[2][0] * mat34[0][1] + m44[2][1] * mat34[1][1] + m44[2][2] * mat34[2][1];
		r.m44[2][2] = m44[2][0] * mat34[0][2] + m44[2][1] * mat34[1][2] + m44[2][2] * mat34[2][2];
		r.m44[2][3] = m44[2][0] * mat34[0][3] + m44[2][1] * mat34[1][3] + m44[2][2] * mat34[2][3] + m44[2][3];

		r.m44[3][0] = m44[3][0] * mat34[0][0] + m44[3][1] * mat34[1][0] + m44[3][2] * mat34[2][0];
		r.m44[3][1] = m44[3][0] * mat34[0][1] + m44[3][1] * mat34[1][1] + m44[3][2] * mat34[2][1];
		r.m44[3][2] = m44[3][0] * mat34[0][2] + m44[3][1] * mat34[1][2] + m44[3][2] * mat34[2][2];
		r.m44[3][3] = m44[3][0] * mat34[0][3] + m44[3][1] * mat34[1][3] + m44[3][2] * mat34[2][3] + m44[3][3];

		return r;
	}
}